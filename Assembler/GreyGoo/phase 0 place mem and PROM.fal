; Factorio Pyanodon Greygoo Program
; Phase 0.1 Base Computer Initial Program
; Version 1.1
; Upon placement of the initial computation block, this program will place a Solar Block,
; an additional Memory Block, and the PO.2 PROM program for placing the Main block.


; Definitions of the memory addresses of the data inputs for the program
#def OUT_scanner_x $1025
#def OUT_scanner_y $1026
#def OUT_scanner_height $1027
#def OUT_scanner_width $1028

#def OUT_rotation $1029
#def OUT_construct_bp $1030
#def OUT_block_coordinates $1031
#def OUT_block_num $1032

; Definitions of the memory addresses of the data outputs for the program
#def IN_resources $2049
#def IN_total_mineable $2050
#def IN_construction_bots_used $2051
#def IN_accumulator_charge $2052

#def IN_block_coordinates $2053
#def IN_block_num $2054
#def IN_block_identity $2055
#def IN_block_size $2056

#def PROM_COMPLETE $10

; Resource Masks
#def water      0b00000000000000000000000000000001
#def unscanned  0b00000000000000000000000000000010

; Constants
#def grid_s1 24
#def grid_s2 48
#def grid_s3 96

; Blueprint keys
#def Standard_Solar_Block   1
#def Memory_Block_North     2
#def Memory_Block_East      3
#def Memory_Block_South     4
#def Memory_Block_West      5
#def P0_PROM                6


;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
start:
CMP IN_accumulator_charge, 100
BN start
CMP 0, IN_construction_bots_used
BN start

ADD OUT_scanner_height, grid_s2, 0
ADD OUT_scanner_width, grid_s2, 0
ADD OUT_scanner_x, 0, 0
ADD OUT_scanner_y, 0, 0

;Scan in all 4 directions for clear spaces
MUL $1, grid_s2, 1 ; i vector component
MUL $2, grid_s2, 1 ; j vector component
STOR 3, 1           ; Build counter
STOR 5, 0           ; M[5] Number of rotations
STOR 6, 0           ; M[6] Temporary working variable

scan_loop:
ADD OUT_scanner_x, OUT_scanner_x, $1
ADD OUT_scanner_y, OUT_scanner_y, $2

CMP 8, $5
BZ scan_end
CMP 4, $3
BZ scan_end

AND $-1, IN_resources, water
BZ 1f
B scan_rotate

1:
; BUILD PO BLOCKS
; build Solar Block
; Check is solar block already built
CMP 1, $3
BN 1f
PC $6
B encode_coord
ADD OUT_block_num, $3, 1
ADD OUT_construct_bp, Standard_Solar_Block, 0
ADD $3, $3, 1

B scan_rotate
1:
; check if placing in the cardinal directions instead of X
CMP $5, 4
BN scan_rotate

; build Memory Block
; Check is MEM block already built
CMP 2, $3
BN 1f
PC $6
B encode_coord
ADD OUT_block_num, $3, 1
ADD OUT_construct_bp, Memory_Block_North, [$5, -4]
ADD $3, $3, 1
B scan_rotate
1:

; build PROM Block
; Don't need to check is MEM block already built
PC $6
B encode_coord
ADD OUT_block_num, $3, 1
ADD OUT_construct_bp, P0_PROM, 0
ADD $3, $3, 1

;ROTATE TO DIFFERENT BLOCK
scan_rotate:
CMP IN_accumulator_charge, 100
BN scan_rotate
CMP 0, IN_construction_bots_used
BN scan_rotate
MUL OUT_construct_bp, 1, 0

MUL OUT_scanner_x, 1, 0
MUL OUT_scanner_y, 1, 0
MUL $6, $2, -1     ; Rotate [i,j] direction vector
MUL $2, $1, 1
ADD $1, $6, 0
ADD $5, $5, 1      ; M[5]++, rotation

CMP $5, 4
BZ 1f
B scan_loop
1:
MUL $1, 1, 0       ; Switch from corner scanning to cardinal direction scanning
B scan_loop
scan_end:


; ENCODE_COORDINATES FUNCTION
; return PC: $6
; inputs:    $1 <-- x
;            $2 <-- y
; outputs:   OUT_block_coordinates
B 9f
encode_coord:
ADD OUT_block_coordinates, $1, 0x3fff
SAL OUT_block_coordinates, OUT_block_coordinates, 15
ADD OUT_block_coordinates, OUT_block_coordinates, $2
ADD OUT_block_coordinates, OUT_block_coordinates, 0x3fff
B $6
9:
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
HLT
